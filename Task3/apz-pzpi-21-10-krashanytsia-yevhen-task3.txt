1 ОПИС АРХІТЕКТУРИ СИСТЕМИ

Як було зазначено вище, серверна система реалізована за допомогою мови програмування JavaScript, з використанням Node JS та фреймворку Express. На ньому знаходиться частина бізнес логіки.
База даних була створена за допомогою СУБД PostgreSQL. Її використання було обумовлено великою спільнотою, завдяки якій вона є дуже підтримуваною та розвиненою. Також вона підтримує стандарти SQL, що дозволяє використовувати або переносити данні с інших СУБД, підтримає ACID-властивості, що надає надійність транзакцій, підтримка SSL, що забезпечує безпеку передачі інформації між сервером та клієнтом, та можливість підтримувати гігантські об’єми даних, що дозволяє легко її масштабувати.

2 ПОБУДОВА ДІАГРАМИ ВЗАЄМОДІЇ

Діаграма взаємодії - це інструмент візуалізації, який допомагає програмістам розуміти взаємодії між компонентами системи. Вона вказує, як об'єкти взаємодіють між собою та зовнішніми пристроями, а також визначає порядок цих взаємодій.
На ній ми бачимо, що праця IOT пристрою тісно пов’язана з додатком.
Користувач спочатку обирає режим. Він може бути або одним із заготовлених, або якщо він захоче, то може створити новий. Для цього йому у додатку буде необхідно за допомогою еквалайзеру ввести конфігурацію режиму, яка потім буде повернута на IOT пристрій та преобразована.
Якщо користувач є початківцем він може після обрання режиму звуку, увімкнути режим навчання. Для цього він у додатку обрає пісню, а він повертає її до пристрою, важливо підмітити що музика буде лунати у стилі обраному спочатку.

3 ОПИС АРХІТЕКТУРИ СЕРВЕРНОЇ ЧАСТИНИ

Схема представляє собою сам модуль. До нього підключено зовнішний динамік для програвання звуку, потенціометр для регулювання гучності, та світлодіоди для відстежування режимів. У емуляторі є два режими музики, це режим року та режим кантрі. Також є режим навчання який запускає гру динаміка з паузами, у які користувач повинен повторити щойно програну музику. Данні потрапляють та пристрій двома шляхами, або через консоль у самому емуляторі, або якщо пристрій зробити фізичним, буде можливість підключатись через блютуз.

4 ПОБУДОВА ДІАГРАМИ ПРЕЦЕДЕНТІВ

Для опису поведінки користувача у системі, необхідно створити UML-діаграму прецедентів, на якій будуть відображатись усі користувачі, та їх можливості у системі.
Як ми бачимо у системі може існувати 3 види користувачів:
•	Користувачі які мають електронний додаток, та можуть регулювати гучність, переключати музичні стилі та створювати свої та також вмикати режим навчання гри на гітарі;
•	Користувач без додатку, який обмежений лише фізичними складовими девайсу, а саме регулювання гучності, та перемикання базових режимів.
Усі користувачі зможуть вмикати пристрій, керувати гучністю та перемикати режими.
Данні про режими створені користувачами зберігаються у додатку а не на пристрої.

5 ПОБУДОВА ДІАГРАМИ ДІЯЛЬНОСТІ

Діаграма діяльності у UML є інструментом для розуміння та візуалізації послідовності операцій та дій у системі. Цей тип діаграми дозволяє програмістам отримати уявлення про послідовність дій користувача. На діаграмі ми бачимо, що спочатку користувач увімкне пристрій. Після чого йому необхідно обрати стиль музики, або створити свій якщо він побажає. Коли користувач вибере, йому необхідно налаштувати гучність звуку під стиль. Після чого користувач може або обрати режим навчання, або продовжити грати самому. Коли сесія підходить к кінцю користувач вимикає пристрій.	

6 ПОБУДОВА ДІАГРАМИ КОМПОНЕНТІВ

Діаграма компонентів використовується для відстеження взаємодії компонентів всередині системи. З її допомогою програмісти будуть бачити як саме виконується система та взаємодії у ній.
На ній ми бачимо процес праці пристрою.
Користувач або напряму через фізичні елементи, або через додаток подає сигнал на внутрішню пам’ять пристрою. Звідти вона потрапляє на динамік, після чого повертається у якості звуку.

ВИСНОВКИ

На лабораторній роботі я розробив IOT частину програмної системи, реалізував бізнес логіку, схему пристрою, навчився використовувати умулятор wokwi. Створив UML-діаграму компонентів, прецедентів, діяльності та взаємодії.