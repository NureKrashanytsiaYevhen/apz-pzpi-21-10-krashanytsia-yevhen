1 ОПИС АРХІТЕКТУРИ СИСТЕМИ

Клієнтська частина розроблена за допомогою модульної архітектури, вона полягає в тому, що система складається з незалежних модулів, кожен з яких відповідає за певну функціональність.

2 ПОБУДОВА ДІАГРАМИ СТАНІВ

Діаграма станів необхідна для уявлення поведінки системи при змінах у неї з часом.
На ній ми бачимо, користувач після авторизації та реєстрації може перейти на головну сторінку.
На ній він може продивитись товар, проживитись його характеристику, та додати його до кошику.
Після чого є можливість продивитись сам кошик, та видалити з нього товари, чи замовити їх.

3 ОПИС АРХІТЕКТУРИ СЕРВЕРНОЇ ЧАСТИНИ

Посилання на відео https://youtu.be/1X13isIdmu4 
Для розробки я використовував методику Component-Based Development, коли програмують компоненти, які потім можна неодноразово використовувати у сторінках які відображаються. Ця методика гарна тим що дозволяє швидко ремонтувати, та просто розуміти систему. Також завдяки цьому можна використати Liskov Substitution Principle, а саме у вигляди того, що компоненти можуть замінятись без порушення праці додатку.
Також присутня локалізація на англійську мову.


4 ПОБУДОВА ДІАГРАМИ ПРЕЦЕДЕНТІВ

Для опису поведінки користувача у системі, необхідно створити UML-діаграму прецедентів, на якій будуть відображатись усі користувачі, та їх можливості у системі.
Як ми бачимо у системі може існувати 3 види користувачів:
•	Незареєстрований користувач, який може тільки продивлятись товари та зареєструватись;
•	Зареєстрований користувач, він може так само переглядати товари, але на відмін від незареєстрованих також може додавати їх до кошика, та оформлювати замовлення;
•	Адміністратор це люде яка може адмініструвати сайт, він має можливість додавати товари та категорії, може видаляти їх, та керувати за користувачами та видаляти їх за необхідністю. 
Усі користувачі зможуть проводити пошук.
При збереженні товарів, буде підраховуватись їх загальна сума.

5 ПОБУДОВА ДІАГРАМИ ПАКЕТІВ

Для реалізації було створено декілька пакетів, які взаємодіють між собою. Серед них є наступні пакети, компоненти роутінгу(route) який відповідає за переходи по сайту, сторінки(page) компоненти які використовують пакети компонентів(component), пакет http який відповідає за підключення до серверу та пакетом сховище(store) у якому зберігається уся інформація необхідна для праці сайту.

6 ПОБУДОВА ДІАГРАМИ КОМПОНЕНТІВ

Діаграма компонентів використовується для відстеження взаємодії компонентів всередині системи. З її допомогою програмісти будуть бачити як саме виконується система та взаємодії у ній. На ній ми бачимо процес оформлення замовлення
При введені даних користувачем, для чого він використовує веб застосунок, вони відправляються на сервер, де оброблюються та передаються до бази даних. 

ВИСНОВКИ

На лабораторній роботі я розробив клієнтську частину програмної системи. Реалізував частину бізнес логіки. Створив UML-діаграму компонентів, прецедентів, діяльності та станів
