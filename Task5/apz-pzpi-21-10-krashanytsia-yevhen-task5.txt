1 ОПИС АРХІТЕКТУРИ СИСТЕМИ

Для розробки мобільного додатку я використовував андроід студію та мову програмування котлін. Мобільний додаток розроблений за допомогою шарової архітектури.Вона розбиває додаток на окремі шари, кожен з яких відповідає за певний аспект системи. 

2 ПОБУДОВА ДІАГРАМИ СТАНІВ

Діаграма станів необхідна для уявлення поведінки системи при змінах у неї з часом.
На ній ми бачимо, користувач після авторизації та реєстрації може перейти на головну сторінку.
На ній він може продивитись пісні, та їх ноти, також увімкнути режим навчання..
Також можно налаштувати пісню за допомогою еквалайзеру.

3 ОПИС АРХІТЕКТУРИ СЕРВЕРНОЇ ЧАСТИНИ

Вона розбиває додаток на окремі шари, кожен з яких відповідає за певний аспект системи. Це дозволяє ізолювати логіку бізнесу від інтерфейсу користувача, що робить додаток більш структурованим, зручним для підтримки і розширення. Він складається з трьох шарів презентаційного, логіки та доступу до данних.
Презентаційний Шар
У моєму проекті цей шар включає наступні компоненти:
Activity:
•	ChordDisplayActivity
•	LoginActivity
•	MainActivity
•	RegisterActivity
XML-файли макетів (layouts):
•	activity_chord_display.xml
•	activity_equalize.xml
•	activity_login.xml
•	activity_main.xml
•	activity_register.xml
Цей шар відповідає за відображення інформації користувачу та обробку його вводу.
Шар Логіки Застосунку
Цей шар містить бізнес-логіку вашого додатку. У вашому випадку це можуть бути такі класи:
•	Equalize.kt
•	RecyclerView.kt
Ці класи реалізують основну функціональність вашого додатку і обробляють дані, отримані з шару доступу до даних, щоб надати їх презентаційному шару.
Шар Доступу до Даних
Цей шар відповідає за взаємодію з зовнішніми джерелами даних. У вашому проекті це:
•	ApiService
ApiService реалізує логіку взаємодії з зовнішніми API для отримання необхідних даних.

4 ПОБУДОВА ДІАГРАМИ ПРЕЦЕДЕНТІВ

Для опису поведінки користувача у системі, необхідно створити UML-діаграму прецедентів, на якій будуть відображатись усі користувачі, та їх можливості у системі.
Як ми бачимо у системі може існувати 2 види користувачів:
•	Незареєстрований користувач, який може тільки зареєструватись;
•	Зареєстрований користувач, він може авторизуватись, продивитись пісні, увімкнути режим навчання, налаштувати за допомогою еквалайзеру звук, та підключитись до IOT приладу;

5 ПОБУДОВА ДІАГРАМИ ПАКЕТІВ

Для реалізації було створено декілька пакетів, які взаємодіють між собою. Серед них є наступні пакети, компоненти який відповідає за функціональність, сторінки(layout) компоненти які використовуются компонентами для відображення інтерфейсу, пакет API який відповідає за підключення до серверу та пакетом моделі (Model) у якому зберігається уся інформація необхідна для праці сайту.

6 ПОБУДОВА ДІАГРАМИ КОМПОНЕНТІВ

Діаграма компонентів використовується для відстеження взаємодії компонентів всередині системи. З її допомогою програмісти будуть бачити як саме виконується система та взаємодії у ній. На ній ми бачимо процес зміни музики
При введені даних користувачем, для чого він використовує застоунок, вони відправляються у додаток, звідки по блютуз ідуть до IOT пристрою. 

ВИСНОВКИ

На лабораторній роботі я розробив мобільну частину програмної системи. Реалізував частину бізнес логіки. Створив UML-діаграму компонентів, прецедентів, діяльності та станів
